name: publish and release package

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Install apt dependencies
        run: |
          sudo apt-get update
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Build package
        run: poetry build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  build_docs:
    runs-on: ubuntu-latest
    steps:
      - name: Install apt dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1 libglib2.0-0 python3-opencv
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install poetry with docs
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Install dependencies with docs
        run: |
          poetry install --with docs
          poetry install --no-root
      - name: Build docs
        run: poetry run sphinx-build -b html docs/source docs/build/html
      - name: Debugging
        run: |
          pwd
          ls -la
          ls -la docs/build/html
          ls -la docs/source
      - name: Upload docs
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: ./docs/build/html

  build_executable:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
          - os: macos-latest # arm64 macOS
          - os: macos-13 # x86_64 macOS
          - os: ubuntu-22.04 # x86_64 linux, oldest available GH runner. Older libc for maximal compatibility
          - os: ubuntu-22.04-arm # arm linux build
    steps:
      - name: Install apt dependencies
        if: matrix.os == 'ubuntu-22.04' || matrix.os == 'ubuntu-22.04-arm'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-glx libglib2.0-0 python3-opencv
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
      - name: Install dependencies
        run: |
          poetry install
          pip install pyinstaller pillow
      - name: Build executable
        run: ./executable/make.sh
      - name: Debugging
        run: |
          pwd
          ls -la
          ls -la ./dist
      - name: Upload Build
        uses: actions/upload-artifact@v4
        with:
          name: FairSenseAI-${{ runner.os }}-${{ runner.arch }}
          path: ./dist/*

  release_github:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        id: create_release
        uses: ncipollo/release-action@v1.16.0
        with:
          artifacts: "dist/*"
          generateReleaseNotes: true
